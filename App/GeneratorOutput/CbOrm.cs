//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CbOrm.Ref
{
    using CbOrm.Eno;
    using CbOrm.Str;
    using System;
    using CbOrm.Rfl;
    
    
    public class Account : CEntityObject
    {
        
        private String PasswordM = String.Empty;
        
        private CR11CRef<Account, Publisher> PublisherRefM;
        
        private String UserNameM = String.Empty;
        
        public Account(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        [CSaveConverterAttribute("Encrypt")]
        public String Password
        {
            get
            {
                return this.PasswordM;
            }
            set
            {
                if (Object.Equals(this.PasswordM, value))
                {
                    this.PasswordM = value;
                }
            }
        }
        
        public CR11CRef<Account, Publisher> PublisherRef
        {
            get
            {
                if (Object.Equals(this.PublisherRefM, null))
                {
                }
                else
                {
                    this.PublisherRefM = new CR11CRef<Account, Publisher>();
                }
                return this.PublisherRefM;
            }
        }
        
        public String UserName
        {
            get
            {
                return this.UserNameM;
            }
            set
            {
                if (Object.Equals(this.UserNameM, value))
                {
                    this.UserNameM = value;
                }
            }
        }
    }
    
    public class Content : CEntityObject
    {
        
        public Content(CStorage aStorage) : 
                base(aStorage)
        {
        }
    }
    
    public class EmailAccount : CEntityObject
    {
        
        public EmailAccount(CStorage aStorage) : 
                base(aStorage)
        {
        }
    }
    
    public class Publisher : CEntityObject
    {
        
        private CR1NCRef<Publisher, Content> BackgroundImageRefM;
        
        private CR1NCRef<Publisher, Content> BluredBackgroundImageRefM;
        
        private CR1NCRef<Publisher, EmailAccount> EmailAccountRefM;
        
        private Boolean ListM;
        
        private CR1NCRef<Publisher, Content> PreviewImageRefM;
        
        public Publisher(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        public CR1NCRef<Publisher, Content> BackgroundImageRef
        {
            get
            {
                if (Object.Equals(this.BackgroundImageRefM, null))
                {
                }
                else
                {
                    this.BackgroundImageRefM = new CR1NCRef<Publisher, Content>();
                }
                return this.BackgroundImageRefM;
            }
        }
        
        public CR1NCRef<Publisher, Content> BluredBackgroundImageRef
        {
            get
            {
                if (Object.Equals(this.BluredBackgroundImageRefM, null))
                {
                }
                else
                {
                    this.BluredBackgroundImageRefM = new CR1NCRef<Publisher, Content>();
                }
                return this.BluredBackgroundImageRefM;
            }
        }
        
        public CR1NCRef<Publisher, EmailAccount> EmailAccountRef
        {
            get
            {
                if (Object.Equals(this.EmailAccountRefM, null))
                {
                }
                else
                {
                    this.EmailAccountRefM = new CR1NCRef<Publisher, EmailAccount>();
                }
                return this.EmailAccountRefM;
            }
        }
        
        public Boolean List
        {
            get
            {
                return this.ListM;
            }
            set
            {
                if (Object.Equals(this.ListM, value))
                {
                    this.ListM = value;
                }
            }
        }
        
        public CR1NCRef<Publisher, Content> PreviewImageRef
        {
            get
            {
                if (Object.Equals(this.PreviewImageRefM, null))
                {
                }
                else
                {
                    this.PreviewImageRefM = new CR1NCRef<Publisher, Content>();
                }
                return this.PreviewImageRefM;
            }
        }
    }
}
