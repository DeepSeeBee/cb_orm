//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CbVoucherApp.Code.Domain
{
    using CbOrm.Entity;
    using CbOrm.Storage;
    using CbOrm.Ref;
    using CbOrm.Meta;
    using System.Collections.Generic;
    using System;
    using CbOrm.App.Web;
    
    
    public class Account : CEntityObject
    {
        
        public static CbOrm.Meta.CTyp _Account_TypM = new CbOrm.Meta.CTyp(typeof(Account), new System.Guid("00000000-0000-0000-0000-000000000000"), Account._GetProperties);
        
        private CSkalarRef<Account, String> UserNameM;
        
        private static CSkalarRefMetaInfo _UserNameMetaInfoM = new CSkalarRefMetaInfo(typeof(Account), nameof(UserName));
        
        private CSkalarRef<Account, String> PasswordM;
        
        private static CSkalarRefMetaInfo _PasswordMetaInfoM = new CSkalarRefMetaInfo(typeof(Account), nameof(Password));
        
        private CR11CRef<Account, Publisher> PublisherM;
        
        private static CR11CRefMetaInfo _PublisherMetaInfoM = new CR11CRefMetaInfo(typeof(Account), nameof(Publisher));
        
        public Account(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        public static CbOrm.Meta.CTyp _Account_Typ
        {
            get
            {
                return Account._Account_TypM;
            }
        }
        
        public override CbOrm.Meta.CTyp Typ
        {
            get
            {
                return Account._Account_Typ;
            }
        }
        
        public CSkalarRef<Account, String> UserName
        {
            get
            {
                if (Object.ReferenceEquals(this.UserNameM, null))
                {
                    this.UserNameM = new CSkalarRef<Account, String>(this, Account._UserNameMetaInfo);
                }
                return this.UserNameM;
            }
        }
        
        public static CSkalarRefMetaInfo _UserNameMetaInfo
        {
            get
            {
                return Account._UserNameMetaInfoM;
            }
        }
        
        public CSkalarRef<Account, String> Password
        {
            get
            {
                if (Object.ReferenceEquals(this.PasswordM, null))
                {
                    this.PasswordM = new CSkalarRef<Account, String>(this, Account._PasswordMetaInfo);
                }
                return this.PasswordM;
            }
        }
        
        public static CSkalarRefMetaInfo _PasswordMetaInfo
        {
            get
            {
                return Account._PasswordMetaInfoM;
            }
        }
        
        public CR11CRef<Account, Publisher> Publisher
        {
            get
            {
                if (Object.ReferenceEquals(this.PublisherM, null))
                {
                    this.PublisherM = new CR11CRef<Account, Publisher>(this, Account._PublisherMetaInfo);
                }
                return this.PublisherM;
            }
        }
        
        public static CR11CRefMetaInfo _PublisherMetaInfo
        {
            get
            {
                return Account._PublisherMetaInfoM;
            }
        }
        
        private static void _GetProperties(System.Action<CbOrm.Meta.CRefMetaInfo> aAddProperty)
        {
            aAddProperty.Invoke(Account._UserNameMetaInfo);
            aAddProperty.Invoke(Account._PasswordMetaInfo);
            aAddProperty.Invoke(Account._PublisherMetaInfo);
        }
    }
    
    public class Publisher : CEntityObject
    {
        
        public static CbOrm.Meta.CTyp _Publisher_TypM = new CbOrm.Meta.CTyp(typeof(Publisher), new System.Guid("00000000-0000-0000-0000-000000000000"), Publisher._GetProperties);
        
        private CR1NCRef<Publisher, EmailAccount> EmailAccountM;
        
        private static CR1NCRefMetaInfo _EmailAccountMetaInfoM = new CR1NCRefMetaInfo(typeof(Publisher), nameof(EmailAccount));
        
        private CR1NCRef<Publisher, Content> BackgroundImageM;
        
        private static CR1NCRefMetaInfo _BackgroundImageMetaInfoM = new CR1NCRefMetaInfo(typeof(Publisher), nameof(BackgroundImage));
        
        private CR1NCRef<Publisher, Content> BluredBackgroundImageM;
        
        private static CR1NCRefMetaInfo _BluredBackgroundImageMetaInfoM = new CR1NCRefMetaInfo(typeof(Publisher), nameof(BluredBackgroundImage));
        
        private CR1NCRef<Publisher, Content> PreviewImageM;
        
        private static CR1NCRefMetaInfo _PreviewImageMetaInfoM = new CR1NCRefMetaInfo(typeof(Publisher), nameof(PreviewImage));
        
        private CSkalarRef<Publisher, Boolean> ListM;
        
        private static CSkalarRefMetaInfo _ListMetaInfoM = new CSkalarRefMetaInfo(typeof(Publisher), nameof(List));
        
        private CR1NCRef<Publisher, Gift> GiftsM;
        
        private static CR1NCRefMetaInfo _GiftsMetaInfoM = new CR1NCRefMetaInfo(typeof(Publisher), nameof(Gifts));
        
        public Publisher(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        public static CbOrm.Meta.CTyp _Publisher_Typ
        {
            get
            {
                return Publisher._Publisher_TypM;
            }
        }
        
        public override CbOrm.Meta.CTyp Typ
        {
            get
            {
                return Publisher._Publisher_Typ;
            }
        }
        
        public CR1NCRef<Publisher, EmailAccount> EmailAccount
        {
            get
            {
                if (Object.ReferenceEquals(this.EmailAccountM, null))
                {
                    this.EmailAccountM = new CR1NCRef<Publisher, EmailAccount>(this, Publisher._EmailAccountMetaInfo);
                }
                return this.EmailAccountM;
            }
        }
        
        public static CR1NCRefMetaInfo _EmailAccountMetaInfo
        {
            get
            {
                return Publisher._EmailAccountMetaInfoM;
            }
        }
        
        public CR1NCRef<Publisher, Content> BackgroundImage
        {
            get
            {
                if (Object.ReferenceEquals(this.BackgroundImageM, null))
                {
                    this.BackgroundImageM = new CR1NCRef<Publisher, Content>(this, Publisher._BackgroundImageMetaInfo);
                }
                return this.BackgroundImageM;
            }
        }
        
        public static CR1NCRefMetaInfo _BackgroundImageMetaInfo
        {
            get
            {
                return Publisher._BackgroundImageMetaInfoM;
            }
        }
        
        public CR1NCRef<Publisher, Content> BluredBackgroundImage
        {
            get
            {
                if (Object.ReferenceEquals(this.BluredBackgroundImageM, null))
                {
                    this.BluredBackgroundImageM = new CR1NCRef<Publisher, Content>(this, Publisher._BluredBackgroundImageMetaInfo);
                }
                return this.BluredBackgroundImageM;
            }
        }
        
        public static CR1NCRefMetaInfo _BluredBackgroundImageMetaInfo
        {
            get
            {
                return Publisher._BluredBackgroundImageMetaInfoM;
            }
        }
        
        public CR1NCRef<Publisher, Content> PreviewImage
        {
            get
            {
                if (Object.ReferenceEquals(this.PreviewImageM, null))
                {
                    this.PreviewImageM = new CR1NCRef<Publisher, Content>(this, Publisher._PreviewImageMetaInfo);
                }
                return this.PreviewImageM;
            }
        }
        
        public static CR1NCRefMetaInfo _PreviewImageMetaInfo
        {
            get
            {
                return Publisher._PreviewImageMetaInfoM;
            }
        }
        
        public CSkalarRef<Publisher, Boolean> List
        {
            get
            {
                if (Object.ReferenceEquals(this.ListM, null))
                {
                    this.ListM = new CSkalarRef<Publisher, Boolean>(this, Publisher._ListMetaInfo);
                }
                return this.ListM;
            }
        }
        
        public static CSkalarRefMetaInfo _ListMetaInfo
        {
            get
            {
                return Publisher._ListMetaInfoM;
            }
        }
        
        public CR1NCRef<Publisher, Gift> Gifts
        {
            get
            {
                if (Object.ReferenceEquals(this.GiftsM, null))
                {
                    this.GiftsM = new CR1NCRef<Publisher, Gift>(this, Publisher._GiftsMetaInfo);
                }
                return this.GiftsM;
            }
        }
        
        public static CR1NCRefMetaInfo _GiftsMetaInfo
        {
            get
            {
                return Publisher._GiftsMetaInfoM;
            }
        }
        
        private static void _GetProperties(System.Action<CbOrm.Meta.CRefMetaInfo> aAddProperty)
        {
            aAddProperty.Invoke(Publisher._EmailAccountMetaInfo);
            aAddProperty.Invoke(Publisher._BackgroundImageMetaInfo);
            aAddProperty.Invoke(Publisher._BluredBackgroundImageMetaInfo);
            aAddProperty.Invoke(Publisher._PreviewImageMetaInfo);
            aAddProperty.Invoke(Publisher._ListMetaInfo);
            aAddProperty.Invoke(Publisher._GiftsMetaInfo);
        }
    }
    
    public class EmailAccount : CEntityObject
    {
        
        public static CbOrm.Meta.CTyp _EmailAccount_TypM = new CbOrm.Meta.CTyp(typeof(EmailAccount), new System.Guid("00000000-0000-0000-0000-000000000000"), EmailAccount._GetProperties);
        
        private CSkalarRef<EmailAccount, String> UserM;
        
        private static CSkalarRefMetaInfo _UserMetaInfoM = new CSkalarRefMetaInfo(typeof(EmailAccount), nameof(User));
        
        private CSkalarRef<EmailAccount, CEmailAdress> EmailM;
        
        private static CSkalarRefMetaInfo _EmailMetaInfoM = new CSkalarRefMetaInfo(typeof(EmailAccount), nameof(Email));
        
        private CSkalarRef<EmailAccount, String> PasswordM;
        
        private static CSkalarRefMetaInfo _PasswordMetaInfoM = new CSkalarRefMetaInfo(typeof(EmailAccount), nameof(Password));
        
        private CSkalarRef<EmailAccount, String> SmtpHostM;
        
        private static CSkalarRefMetaInfo _SmtpHostMetaInfoM = new CSkalarRefMetaInfo(typeof(EmailAccount), nameof(SmtpHost));
        
        private CSkalarRef<EmailAccount, UInt32> SmtpPortM;
        
        private static CSkalarRefMetaInfo _SmtpPortMetaInfoM = new CSkalarRefMetaInfo(typeof(EmailAccount), nameof(SmtpPort));
        
        private CSkalarRef<EmailAccount, String> Pop3HostM;
        
        private static CSkalarRefMetaInfo _Pop3HostMetaInfoM = new CSkalarRefMetaInfo(typeof(EmailAccount), nameof(Pop3Host));
        
        private CSkalarRef<EmailAccount, UInt32> Pop3PortM;
        
        private static CSkalarRefMetaInfo _Pop3PortMetaInfoM = new CSkalarRefMetaInfo(typeof(EmailAccount), nameof(Pop3Port));
        
        private CSkalarRef<EmailAccount, Boolean> UseSslM;
        
        private static CSkalarRefMetaInfo _UseSslMetaInfoM = new CSkalarRefMetaInfo(typeof(EmailAccount), nameof(UseSsl));
        
        public EmailAccount(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        public static CbOrm.Meta.CTyp _EmailAccount_Typ
        {
            get
            {
                return EmailAccount._EmailAccount_TypM;
            }
        }
        
        public override CbOrm.Meta.CTyp Typ
        {
            get
            {
                return EmailAccount._EmailAccount_Typ;
            }
        }
        
        public CSkalarRef<EmailAccount, String> User
        {
            get
            {
                if (Object.ReferenceEquals(this.UserM, null))
                {
                    this.UserM = new CSkalarRef<EmailAccount, String>(this, EmailAccount._UserMetaInfo);
                }
                return this.UserM;
            }
        }
        
        public static CSkalarRefMetaInfo _UserMetaInfo
        {
            get
            {
                return EmailAccount._UserMetaInfoM;
            }
        }
        
        public CSkalarRef<EmailAccount, CEmailAdress> Email
        {
            get
            {
                if (Object.ReferenceEquals(this.EmailM, null))
                {
                    this.EmailM = new CSkalarRef<EmailAccount, CEmailAdress>(this, EmailAccount._EmailMetaInfo);
                }
                return this.EmailM;
            }
        }
        
        public static CSkalarRefMetaInfo _EmailMetaInfo
        {
            get
            {
                return EmailAccount._EmailMetaInfoM;
            }
        }
        
        public CSkalarRef<EmailAccount, String> Password
        {
            get
            {
                if (Object.ReferenceEquals(this.PasswordM, null))
                {
                    this.PasswordM = new CSkalarRef<EmailAccount, String>(this, EmailAccount._PasswordMetaInfo);
                }
                return this.PasswordM;
            }
        }
        
        public static CSkalarRefMetaInfo _PasswordMetaInfo
        {
            get
            {
                return EmailAccount._PasswordMetaInfoM;
            }
        }
        
        public CSkalarRef<EmailAccount, String> SmtpHost
        {
            get
            {
                if (Object.ReferenceEquals(this.SmtpHostM, null))
                {
                    this.SmtpHostM = new CSkalarRef<EmailAccount, String>(this, EmailAccount._SmtpHostMetaInfo);
                }
                return this.SmtpHostM;
            }
        }
        
        public static CSkalarRefMetaInfo _SmtpHostMetaInfo
        {
            get
            {
                return EmailAccount._SmtpHostMetaInfoM;
            }
        }
        
        public CSkalarRef<EmailAccount, UInt32> SmtpPort
        {
            get
            {
                if (Object.ReferenceEquals(this.SmtpPortM, null))
                {
                    this.SmtpPortM = new CSkalarRef<EmailAccount, UInt32>(this, EmailAccount._SmtpPortMetaInfo);
                }
                return this.SmtpPortM;
            }
        }
        
        public static CSkalarRefMetaInfo _SmtpPortMetaInfo
        {
            get
            {
                return EmailAccount._SmtpPortMetaInfoM;
            }
        }
        
        public CSkalarRef<EmailAccount, String> Pop3Host
        {
            get
            {
                if (Object.ReferenceEquals(this.Pop3HostM, null))
                {
                    this.Pop3HostM = new CSkalarRef<EmailAccount, String>(this, EmailAccount._Pop3HostMetaInfo);
                }
                return this.Pop3HostM;
            }
        }
        
        public static CSkalarRefMetaInfo _Pop3HostMetaInfo
        {
            get
            {
                return EmailAccount._Pop3HostMetaInfoM;
            }
        }
        
        public CSkalarRef<EmailAccount, UInt32> Pop3Port
        {
            get
            {
                if (Object.ReferenceEquals(this.Pop3PortM, null))
                {
                    this.Pop3PortM = new CSkalarRef<EmailAccount, UInt32>(this, EmailAccount._Pop3PortMetaInfo);
                }
                return this.Pop3PortM;
            }
        }
        
        public static CSkalarRefMetaInfo _Pop3PortMetaInfo
        {
            get
            {
                return EmailAccount._Pop3PortMetaInfoM;
            }
        }
        
        public CSkalarRef<EmailAccount, Boolean> UseSsl
        {
            get
            {
                if (Object.ReferenceEquals(this.UseSslM, null))
                {
                    this.UseSslM = new CSkalarRef<EmailAccount, Boolean>(this, EmailAccount._UseSslMetaInfo);
                }
                return this.UseSslM;
            }
        }
        
        public static CSkalarRefMetaInfo _UseSslMetaInfo
        {
            get
            {
                return EmailAccount._UseSslMetaInfoM;
            }
        }
        
        private static void _GetProperties(System.Action<CbOrm.Meta.CRefMetaInfo> aAddProperty)
        {
            aAddProperty.Invoke(EmailAccount._UserMetaInfo);
            aAddProperty.Invoke(EmailAccount._EmailMetaInfo);
            aAddProperty.Invoke(EmailAccount._PasswordMetaInfo);
            aAddProperty.Invoke(EmailAccount._SmtpHostMetaInfo);
            aAddProperty.Invoke(EmailAccount._SmtpPortMetaInfo);
            aAddProperty.Invoke(EmailAccount._Pop3HostMetaInfo);
            aAddProperty.Invoke(EmailAccount._Pop3PortMetaInfo);
            aAddProperty.Invoke(EmailAccount._UseSslMetaInfo);
        }
    }
    
    public class Gift : CEntityObject
    {
        
        public static CbOrm.Meta.CTyp _Gift_TypM = new CbOrm.Meta.CTyp(typeof(Gift), new System.Guid("00000000-0000-0000-0000-000000000000"), Gift._GetProperties);
        
        private CSkalarRef<Gift, String> NameM;
        
        private static CSkalarRefMetaInfo _NameMetaInfoM = new CSkalarRefMetaInfo(typeof(Gift), nameof(Name));
        
        private CSkalarRef<Gift, String> HashtagM;
        
        private static CSkalarRefMetaInfo _HashtagMetaInfoM = new CSkalarRefMetaInfo(typeof(Gift), nameof(Hashtag));
        
        private CR11CRef<Gift, Content> CoverM;
        
        private static CR11CRefMetaInfo _CoverMetaInfoM = new CR11CRefMetaInfo(typeof(Gift), nameof(Cover));
        
        private CR1NCRef<Gift, GiftStatistic> StatisticM;
        
        private static CR1NCRefMetaInfo _StatisticMetaInfoM = new CR1NCRefMetaInfo(typeof(Gift), nameof(Statistic));
        
        private CR1NCRef<Gift, DownloadFormat> DownlaodFormatsM;
        
        private static CR1NCRefMetaInfo _DownlaodFormatsMetaInfoM = new CR1NCRefMetaInfo(typeof(Gift), nameof(DownlaodFormats));
        
        private CSkalarRef<Gift, CEmailAdress> NotificationEmailM;
        
        private static CSkalarRefMetaInfo _NotificationEmailMetaInfoM = new CSkalarRefMetaInfo(typeof(Gift), nameof(NotificationEmail));
        
        private CSkalarRef<Gift, Boolean> AutoGrantMaxCountIsDefinedM;
        
        private static CSkalarRefMetaInfo _AutoGrantMaxCountIsDefinedMetaInfoM = new CSkalarRefMetaInfo(typeof(Gift), nameof(AutoGrantMaxCountIsDefined));
        
        private CSkalarRef<Gift, UInt64> AutoGrantMaxCountM;
        
        private static CSkalarRefMetaInfo _AutoGrantMaxCountMetaInfoM = new CSkalarRefMetaInfo(typeof(Gift), nameof(AutoGrantMaxCount));
        
        private CR11CRef<Gift, Newsletter> ReleaseNewsletterM;
        
        private static CR11CRefMetaInfo _ReleaseNewsletterMetaInfoM = new CR11CRefMetaInfo(typeof(Gift), nameof(ReleaseNewsletter));
        
        private CR11CRef<Gift, GiftCounters> CountersM;
        
        private static CR11CRefMetaInfo _CountersMetaInfoM = new CR11CRefMetaInfo(typeof(Gift), nameof(Counters));
        
        private CR1NCRef<Gift, Content> BackgroundImageM;
        
        private static CR1NCRefMetaInfo _BackgroundImageMetaInfoM = new CR1NCRefMetaInfo(typeof(Gift), nameof(BackgroundImage));
        
        private CSkalarRef<Gift, Boolean> ListM;
        
        private static CSkalarRefMetaInfo _ListMetaInfoM = new CSkalarRefMetaInfo(typeof(Gift), nameof(List));
        
        private CSkalarRef<Gift, Uri> ListenUrlM;
        
        private static CSkalarRefMetaInfo _ListenUrlMetaInfoM = new CSkalarRefMetaInfo(typeof(Gift), nameof(ListenUrl));
        
        private CSkalarRef<Gift, Uri> BuyUrlM;
        
        private static CSkalarRefMetaInfo _BuyUrlMetaInfoM = new CSkalarRefMetaInfo(typeof(Gift), nameof(BuyUrl));
        
        public Gift(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        public static CbOrm.Meta.CTyp _Gift_Typ
        {
            get
            {
                return Gift._Gift_TypM;
            }
        }
        
        public override CbOrm.Meta.CTyp Typ
        {
            get
            {
                return Gift._Gift_Typ;
            }
        }
        
        public CSkalarRef<Gift, String> Name
        {
            get
            {
                if (Object.ReferenceEquals(this.NameM, null))
                {
                    this.NameM = new CSkalarRef<Gift, String>(this, Gift._NameMetaInfo);
                }
                return this.NameM;
            }
        }
        
        public static CSkalarRefMetaInfo _NameMetaInfo
        {
            get
            {
                return Gift._NameMetaInfoM;
            }
        }
        
        public CSkalarRef<Gift, String> Hashtag
        {
            get
            {
                if (Object.ReferenceEquals(this.HashtagM, null))
                {
                    this.HashtagM = new CSkalarRef<Gift, String>(this, Gift._HashtagMetaInfo);
                }
                return this.HashtagM;
            }
        }
        
        public static CSkalarRefMetaInfo _HashtagMetaInfo
        {
            get
            {
                return Gift._HashtagMetaInfoM;
            }
        }
        
        public CR11CRef<Gift, Content> Cover
        {
            get
            {
                if (Object.ReferenceEquals(this.CoverM, null))
                {
                    this.CoverM = new CR11CRef<Gift, Content>(this, Gift._CoverMetaInfo);
                }
                return this.CoverM;
            }
        }
        
        public static CR11CRefMetaInfo _CoverMetaInfo
        {
            get
            {
                return Gift._CoverMetaInfoM;
            }
        }
        
        public CR1NCRef<Gift, GiftStatistic> Statistic
        {
            get
            {
                if (Object.ReferenceEquals(this.StatisticM, null))
                {
                    this.StatisticM = new CR1NCRef<Gift, GiftStatistic>(this, Gift._StatisticMetaInfo);
                }
                return this.StatisticM;
            }
        }
        
        public static CR1NCRefMetaInfo _StatisticMetaInfo
        {
            get
            {
                return Gift._StatisticMetaInfoM;
            }
        }
        
        public CR1NCRef<Gift, DownloadFormat> DownlaodFormats
        {
            get
            {
                if (Object.ReferenceEquals(this.DownlaodFormatsM, null))
                {
                    this.DownlaodFormatsM = new CR1NCRef<Gift, DownloadFormat>(this, Gift._DownlaodFormatsMetaInfo);
                }
                return this.DownlaodFormatsM;
            }
        }
        
        public static CR1NCRefMetaInfo _DownlaodFormatsMetaInfo
        {
            get
            {
                return Gift._DownlaodFormatsMetaInfoM;
            }
        }
        
        public CSkalarRef<Gift, CEmailAdress> NotificationEmail
        {
            get
            {
                if (Object.ReferenceEquals(this.NotificationEmailM, null))
                {
                    this.NotificationEmailM = new CSkalarRef<Gift, CEmailAdress>(this, Gift._NotificationEmailMetaInfo);
                }
                return this.NotificationEmailM;
            }
        }
        
        public static CSkalarRefMetaInfo _NotificationEmailMetaInfo
        {
            get
            {
                return Gift._NotificationEmailMetaInfoM;
            }
        }
        
        public CSkalarRef<Gift, Boolean> AutoGrantMaxCountIsDefined
        {
            get
            {
                if (Object.ReferenceEquals(this.AutoGrantMaxCountIsDefinedM, null))
                {
                    this.AutoGrantMaxCountIsDefinedM = new CSkalarRef<Gift, Boolean>(this, Gift._AutoGrantMaxCountIsDefinedMetaInfo);
                }
                return this.AutoGrantMaxCountIsDefinedM;
            }
        }
        
        public static CSkalarRefMetaInfo _AutoGrantMaxCountIsDefinedMetaInfo
        {
            get
            {
                return Gift._AutoGrantMaxCountIsDefinedMetaInfoM;
            }
        }
        
        public CSkalarRef<Gift, UInt64> AutoGrantMaxCount
        {
            get
            {
                if (Object.ReferenceEquals(this.AutoGrantMaxCountM, null))
                {
                    this.AutoGrantMaxCountM = new CSkalarRef<Gift, UInt64>(this, Gift._AutoGrantMaxCountMetaInfo);
                }
                return this.AutoGrantMaxCountM;
            }
        }
        
        public static CSkalarRefMetaInfo _AutoGrantMaxCountMetaInfo
        {
            get
            {
                return Gift._AutoGrantMaxCountMetaInfoM;
            }
        }
        
        public CR11CRef<Gift, Newsletter> ReleaseNewsletter
        {
            get
            {
                if (Object.ReferenceEquals(this.ReleaseNewsletterM, null))
                {
                    this.ReleaseNewsletterM = new CR11CRef<Gift, Newsletter>(this, Gift._ReleaseNewsletterMetaInfo);
                }
                return this.ReleaseNewsletterM;
            }
        }
        
        public static CR11CRefMetaInfo _ReleaseNewsletterMetaInfo
        {
            get
            {
                return Gift._ReleaseNewsletterMetaInfoM;
            }
        }
        
        public CR11CRef<Gift, GiftCounters> Counters
        {
            get
            {
                if (Object.ReferenceEquals(this.CountersM, null))
                {
                    this.CountersM = new CR11CRef<Gift, GiftCounters>(this, Gift._CountersMetaInfo);
                }
                return this.CountersM;
            }
        }
        
        public static CR11CRefMetaInfo _CountersMetaInfo
        {
            get
            {
                return Gift._CountersMetaInfoM;
            }
        }
        
        public CR1NCRef<Gift, Content> BackgroundImage
        {
            get
            {
                if (Object.ReferenceEquals(this.BackgroundImageM, null))
                {
                    this.BackgroundImageM = new CR1NCRef<Gift, Content>(this, Gift._BackgroundImageMetaInfo);
                }
                return this.BackgroundImageM;
            }
        }
        
        public static CR1NCRefMetaInfo _BackgroundImageMetaInfo
        {
            get
            {
                return Gift._BackgroundImageMetaInfoM;
            }
        }
        
        public CSkalarRef<Gift, Boolean> List
        {
            get
            {
                if (Object.ReferenceEquals(this.ListM, null))
                {
                    this.ListM = new CSkalarRef<Gift, Boolean>(this, Gift._ListMetaInfo);
                }
                return this.ListM;
            }
        }
        
        public static CSkalarRefMetaInfo _ListMetaInfo
        {
            get
            {
                return Gift._ListMetaInfoM;
            }
        }
        
        public CSkalarRef<Gift, Uri> ListenUrl
        {
            get
            {
                if (Object.ReferenceEquals(this.ListenUrlM, null))
                {
                    this.ListenUrlM = new CSkalarRef<Gift, Uri>(this, Gift._ListenUrlMetaInfo);
                }
                return this.ListenUrlM;
            }
        }
        
        public static CSkalarRefMetaInfo _ListenUrlMetaInfo
        {
            get
            {
                return Gift._ListenUrlMetaInfoM;
            }
        }
        
        public CSkalarRef<Gift, Uri> BuyUrl
        {
            get
            {
                if (Object.ReferenceEquals(this.BuyUrlM, null))
                {
                    this.BuyUrlM = new CSkalarRef<Gift, Uri>(this, Gift._BuyUrlMetaInfo);
                }
                return this.BuyUrlM;
            }
        }
        
        public static CSkalarRefMetaInfo _BuyUrlMetaInfo
        {
            get
            {
                return Gift._BuyUrlMetaInfoM;
            }
        }
        
        private static void _GetProperties(System.Action<CbOrm.Meta.CRefMetaInfo> aAddProperty)
        {
            aAddProperty.Invoke(Gift._NameMetaInfo);
            aAddProperty.Invoke(Gift._HashtagMetaInfo);
            aAddProperty.Invoke(Gift._CoverMetaInfo);
            aAddProperty.Invoke(Gift._StatisticMetaInfo);
            aAddProperty.Invoke(Gift._DownlaodFormatsMetaInfo);
            aAddProperty.Invoke(Gift._NotificationEmailMetaInfo);
            aAddProperty.Invoke(Gift._AutoGrantMaxCountIsDefinedMetaInfo);
            aAddProperty.Invoke(Gift._AutoGrantMaxCountMetaInfo);
            aAddProperty.Invoke(Gift._ReleaseNewsletterMetaInfo);
            aAddProperty.Invoke(Gift._CountersMetaInfo);
            aAddProperty.Invoke(Gift._BackgroundImageMetaInfo);
            aAddProperty.Invoke(Gift._ListMetaInfo);
            aAddProperty.Invoke(Gift._ListenUrlMetaInfo);
            aAddProperty.Invoke(Gift._BuyUrlMetaInfo);
        }
    }
    
    public class GiftStatistic : CEntityObject
    {
        
        public static CbOrm.Meta.CTyp _GiftStatistic_TypM = new CbOrm.Meta.CTyp(typeof(GiftStatistic), new System.Guid("00000000-0000-0000-0000-000000000000"), GiftStatistic._GetProperties);
        
        private CSkalarRef<GiftStatistic, UInt64> DownloadedM;
        
        private static CSkalarRefMetaInfo _DownloadedMetaInfoM = new CSkalarRefMetaInfo(typeof(GiftStatistic), nameof(Downloaded));
        
        private CSkalarRef<GiftStatistic, UInt64> NotDownloadedM;
        
        private static CSkalarRefMetaInfo _NotDownloadedMetaInfoM = new CSkalarRefMetaInfo(typeof(GiftStatistic), nameof(NotDownloaded));
        
        private CSkalarRef<GiftStatistic, UInt64> OpenRequestsM;
        
        private static CSkalarRefMetaInfo _OpenRequestsMetaInfoM = new CSkalarRefMetaInfo(typeof(GiftStatistic), nameof(OpenRequests));
        
        private CSkalarRef<GiftStatistic, UInt64> GrantedRequestM;
        
        private static CSkalarRefMetaInfo _GrantedRequestMetaInfoM = new CSkalarRefMetaInfo(typeof(GiftStatistic), nameof(GrantedRequest));
        
        public GiftStatistic(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        public static CbOrm.Meta.CTyp _GiftStatistic_Typ
        {
            get
            {
                return GiftStatistic._GiftStatistic_TypM;
            }
        }
        
        public override CbOrm.Meta.CTyp Typ
        {
            get
            {
                return GiftStatistic._GiftStatistic_Typ;
            }
        }
        
        public CSkalarRef<GiftStatistic, UInt64> Downloaded
        {
            get
            {
                if (Object.ReferenceEquals(this.DownloadedM, null))
                {
                    this.DownloadedM = new CSkalarRef<GiftStatistic, UInt64>(this, GiftStatistic._DownloadedMetaInfo);
                }
                return this.DownloadedM;
            }
        }
        
        public static CSkalarRefMetaInfo _DownloadedMetaInfo
        {
            get
            {
                return GiftStatistic._DownloadedMetaInfoM;
            }
        }
        
        public CSkalarRef<GiftStatistic, UInt64> NotDownloaded
        {
            get
            {
                if (Object.ReferenceEquals(this.NotDownloadedM, null))
                {
                    this.NotDownloadedM = new CSkalarRef<GiftStatistic, UInt64>(this, GiftStatistic._NotDownloadedMetaInfo);
                }
                return this.NotDownloadedM;
            }
        }
        
        public static CSkalarRefMetaInfo _NotDownloadedMetaInfo
        {
            get
            {
                return GiftStatistic._NotDownloadedMetaInfoM;
            }
        }
        
        public CSkalarRef<GiftStatistic, UInt64> OpenRequests
        {
            get
            {
                if (Object.ReferenceEquals(this.OpenRequestsM, null))
                {
                    this.OpenRequestsM = new CSkalarRef<GiftStatistic, UInt64>(this, GiftStatistic._OpenRequestsMetaInfo);
                }
                return this.OpenRequestsM;
            }
        }
        
        public static CSkalarRefMetaInfo _OpenRequestsMetaInfo
        {
            get
            {
                return GiftStatistic._OpenRequestsMetaInfoM;
            }
        }
        
        public CSkalarRef<GiftStatistic, UInt64> GrantedRequest
        {
            get
            {
                if (Object.ReferenceEquals(this.GrantedRequestM, null))
                {
                    this.GrantedRequestM = new CSkalarRef<GiftStatistic, UInt64>(this, GiftStatistic._GrantedRequestMetaInfo);
                }
                return this.GrantedRequestM;
            }
        }
        
        public static CSkalarRefMetaInfo _GrantedRequestMetaInfo
        {
            get
            {
                return GiftStatistic._GrantedRequestMetaInfoM;
            }
        }
        
        private static void _GetProperties(System.Action<CbOrm.Meta.CRefMetaInfo> aAddProperty)
        {
            aAddProperty.Invoke(GiftStatistic._DownloadedMetaInfo);
            aAddProperty.Invoke(GiftStatistic._NotDownloadedMetaInfo);
            aAddProperty.Invoke(GiftStatistic._OpenRequestsMetaInfo);
            aAddProperty.Invoke(GiftStatistic._GrantedRequestMetaInfo);
        }
    }
    
    public class DownloadFormat : CEntityObject
    {
        
        public static CbOrm.Meta.CTyp _DownloadFormat_TypM = new CbOrm.Meta.CTyp(typeof(DownloadFormat), new System.Guid("00000000-0000-0000-0000-000000000000"), DownloadFormat._GetProperties);
        
        private CSkalarRef<DownloadFormat, String> NameM;
        
        private static CSkalarRefMetaInfo _NameMetaInfoM = new CSkalarRefMetaInfo(typeof(DownloadFormat), nameof(Name));
        
        private CR1NCRef<DownloadFormat, Content> ContentM;
        
        private static CR1NCRefMetaInfo _ContentMetaInfoM = new CR1NCRefMetaInfo(typeof(DownloadFormat), nameof(Content));
        
        public DownloadFormat(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        public static CbOrm.Meta.CTyp _DownloadFormat_Typ
        {
            get
            {
                return DownloadFormat._DownloadFormat_TypM;
            }
        }
        
        public override CbOrm.Meta.CTyp Typ
        {
            get
            {
                return DownloadFormat._DownloadFormat_Typ;
            }
        }
        
        public CSkalarRef<DownloadFormat, String> Name
        {
            get
            {
                if (Object.ReferenceEquals(this.NameM, null))
                {
                    this.NameM = new CSkalarRef<DownloadFormat, String>(this, DownloadFormat._NameMetaInfo);
                }
                return this.NameM;
            }
        }
        
        public static CSkalarRefMetaInfo _NameMetaInfo
        {
            get
            {
                return DownloadFormat._NameMetaInfoM;
            }
        }
        
        public CR1NCRef<DownloadFormat, Content> Content
        {
            get
            {
                if (Object.ReferenceEquals(this.ContentM, null))
                {
                    this.ContentM = new CR1NCRef<DownloadFormat, Content>(this, DownloadFormat._ContentMetaInfo);
                }
                return this.ContentM;
            }
        }
        
        public static CR1NCRefMetaInfo _ContentMetaInfo
        {
            get
            {
                return DownloadFormat._ContentMetaInfoM;
            }
        }
        
        private static void _GetProperties(System.Action<CbOrm.Meta.CRefMetaInfo> aAddProperty)
        {
            aAddProperty.Invoke(DownloadFormat._NameMetaInfo);
            aAddProperty.Invoke(DownloadFormat._ContentMetaInfo);
        }
    }
    
    public class GiftCounters : CEntityObject
    {
        
        public static CbOrm.Meta.CTyp _GiftCounters_TypM = new CbOrm.Meta.CTyp(typeof(GiftCounters), new System.Guid("00000000-0000-0000-0000-000000000000"), GiftCounters._GetProperties);
        
        private CSkalarRef<GiftCounters, UInt64> AutoGrantCountCurM;
        
        private static CSkalarRefMetaInfo _AutoGrantCountCurMetaInfoM = new CSkalarRefMetaInfo(typeof(GiftCounters), nameof(AutoGrantCountCur));
        
        public GiftCounters(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        public static CbOrm.Meta.CTyp _GiftCounters_Typ
        {
            get
            {
                return GiftCounters._GiftCounters_TypM;
            }
        }
        
        public override CbOrm.Meta.CTyp Typ
        {
            get
            {
                return GiftCounters._GiftCounters_Typ;
            }
        }
        
        public CSkalarRef<GiftCounters, UInt64> AutoGrantCountCur
        {
            get
            {
                if (Object.ReferenceEquals(this.AutoGrantCountCurM, null))
                {
                    this.AutoGrantCountCurM = new CSkalarRef<GiftCounters, UInt64>(this, GiftCounters._AutoGrantCountCurMetaInfo);
                }
                return this.AutoGrantCountCurM;
            }
        }
        
        public static CSkalarRefMetaInfo _AutoGrantCountCurMetaInfo
        {
            get
            {
                return GiftCounters._AutoGrantCountCurMetaInfoM;
            }
        }
        
        private static void _GetProperties(System.Action<CbOrm.Meta.CRefMetaInfo> aAddProperty)
        {
            aAddProperty.Invoke(GiftCounters._AutoGrantCountCurMetaInfo);
        }
    }
    
    public class VoucherRequest : CEntityObject
    {
        
        public static CbOrm.Meta.CTyp _VoucherRequest_TypM = new CbOrm.Meta.CTyp(typeof(VoucherRequest), new System.Guid("00000000-0000-0000-0000-000000000000"), VoucherRequest._GetProperties);
        
        private CSkalarRef<VoucherRequest, Uri> WebSiteM;
        
        private static CSkalarRefMetaInfo _WebSiteMetaInfoM = new CSkalarRefMetaInfo(typeof(VoucherRequest), nameof(WebSite));
        
        private CR11CRef<VoucherRequest, SubscribeRequest> SubscribeRequestM;
        
        private static CR11CRefMetaInfo _SubscribeRequestMetaInfoM = new CR11CRefMetaInfo(typeof(VoucherRequest), nameof(SubscribeRequest));
        
        private CSkalarRef<VoucherRequest, CEmailAdress> EmailM;
        
        private static CSkalarRefMetaInfo _EmailMetaInfoM = new CSkalarRefMetaInfo(typeof(VoucherRequest), nameof(Email));
        
        private CSkalarRef<VoucherRequest, String> PresentingPlatformNameM;
        
        private static CSkalarRefMetaInfo _PresentingPlatformNameMetaInfoM = new CSkalarRefMetaInfo(typeof(VoucherRequest), nameof(PresentingPlatformName));
        
        private CSkalarRef<VoucherRequest, Uri> PresentingPlatformWebsiteM;
        
        private static CSkalarRefMetaInfo _PresentingPlatformWebsiteMetaInfoM = new CSkalarRefMetaInfo(typeof(VoucherRequest), nameof(PresentingPlatformWebsite));
        
        private CSkalarRef<VoucherRequest, String> MessageM;
        
        private static CSkalarRefMetaInfo _MessageMetaInfoM = new CSkalarRefMetaInfo(typeof(VoucherRequest), nameof(Message));
        
        private CR11WRef<VoucherRequest, Gift> GiftM;
        
        private static CR11WRefMetaInfo _GiftMetaInfoM = new CR11WRefMetaInfo(typeof(VoucherRequest), nameof(Gift));
        
        public VoucherRequest(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        public static CbOrm.Meta.CTyp _VoucherRequest_Typ
        {
            get
            {
                return VoucherRequest._VoucherRequest_TypM;
            }
        }
        
        public override CbOrm.Meta.CTyp Typ
        {
            get
            {
                return VoucherRequest._VoucherRequest_Typ;
            }
        }
        
        public CSkalarRef<VoucherRequest, Uri> WebSite
        {
            get
            {
                if (Object.ReferenceEquals(this.WebSiteM, null))
                {
                    this.WebSiteM = new CSkalarRef<VoucherRequest, Uri>(this, VoucherRequest._WebSiteMetaInfo);
                }
                return this.WebSiteM;
            }
        }
        
        public static CSkalarRefMetaInfo _WebSiteMetaInfo
        {
            get
            {
                return VoucherRequest._WebSiteMetaInfoM;
            }
        }
        
        public CR11CRef<VoucherRequest, SubscribeRequest> SubscribeRequest
        {
            get
            {
                if (Object.ReferenceEquals(this.SubscribeRequestM, null))
                {
                    this.SubscribeRequestM = new CR11CRef<VoucherRequest, SubscribeRequest>(this, VoucherRequest._SubscribeRequestMetaInfo);
                }
                return this.SubscribeRequestM;
            }
        }
        
        public static CR11CRefMetaInfo _SubscribeRequestMetaInfo
        {
            get
            {
                return VoucherRequest._SubscribeRequestMetaInfoM;
            }
        }
        
        public CSkalarRef<VoucherRequest, CEmailAdress> Email
        {
            get
            {
                if (Object.ReferenceEquals(this.EmailM, null))
                {
                    this.EmailM = new CSkalarRef<VoucherRequest, CEmailAdress>(this, VoucherRequest._EmailMetaInfo);
                }
                return this.EmailM;
            }
        }
        
        public static CSkalarRefMetaInfo _EmailMetaInfo
        {
            get
            {
                return VoucherRequest._EmailMetaInfoM;
            }
        }
        
        public CSkalarRef<VoucherRequest, String> PresentingPlatformName
        {
            get
            {
                if (Object.ReferenceEquals(this.PresentingPlatformNameM, null))
                {
                    this.PresentingPlatformNameM = new CSkalarRef<VoucherRequest, String>(this, VoucherRequest._PresentingPlatformNameMetaInfo);
                }
                return this.PresentingPlatformNameM;
            }
        }
        
        public static CSkalarRefMetaInfo _PresentingPlatformNameMetaInfo
        {
            get
            {
                return VoucherRequest._PresentingPlatformNameMetaInfoM;
            }
        }
        
        public CSkalarRef<VoucherRequest, Uri> PresentingPlatformWebsite
        {
            get
            {
                if (Object.ReferenceEquals(this.PresentingPlatformWebsiteM, null))
                {
                    this.PresentingPlatformWebsiteM = new CSkalarRef<VoucherRequest, Uri>(this, VoucherRequest._PresentingPlatformWebsiteMetaInfo);
                }
                return this.PresentingPlatformWebsiteM;
            }
        }
        
        public static CSkalarRefMetaInfo _PresentingPlatformWebsiteMetaInfo
        {
            get
            {
                return VoucherRequest._PresentingPlatformWebsiteMetaInfoM;
            }
        }
        
        public CSkalarRef<VoucherRequest, String> Message
        {
            get
            {
                if (Object.ReferenceEquals(this.MessageM, null))
                {
                    this.MessageM = new CSkalarRef<VoucherRequest, String>(this, VoucherRequest._MessageMetaInfo);
                }
                return this.MessageM;
            }
        }
        
        public static CSkalarRefMetaInfo _MessageMetaInfo
        {
            get
            {
                return VoucherRequest._MessageMetaInfoM;
            }
        }
        
        public CR11WRef<VoucherRequest, Gift> Gift
        {
            get
            {
                if (Object.ReferenceEquals(this.GiftM, null))
                {
                    this.GiftM = new CR11WRef<VoucherRequest, Gift>(this, VoucherRequest._GiftMetaInfo);
                }
                return this.GiftM;
            }
        }
        
        public static CR11WRefMetaInfo _GiftMetaInfo
        {
            get
            {
                return VoucherRequest._GiftMetaInfoM;
            }
        }
        
        private static void _GetProperties(System.Action<CbOrm.Meta.CRefMetaInfo> aAddProperty)
        {
            aAddProperty.Invoke(VoucherRequest._WebSiteMetaInfo);
            aAddProperty.Invoke(VoucherRequest._SubscribeRequestMetaInfo);
            aAddProperty.Invoke(VoucherRequest._EmailMetaInfo);
            aAddProperty.Invoke(VoucherRequest._PresentingPlatformNameMetaInfo);
            aAddProperty.Invoke(VoucherRequest._PresentingPlatformWebsiteMetaInfo);
            aAddProperty.Invoke(VoucherRequest._MessageMetaInfo);
            aAddProperty.Invoke(VoucherRequest._GiftMetaInfo);
        }
    }
    
    public class Voucher : CEntityObject
    {
        
        public static CbOrm.Meta.CTyp _Voucher_TypM = new CbOrm.Meta.CTyp(typeof(Voucher), new System.Guid("00000000-0000-0000-0000-000000000000"), Voucher._GetProperties);
        
        private CSkalarRef<Voucher, Boolean> IsDownloadedM;
        
        private static CSkalarRefMetaInfo _IsDownloadedMetaInfoM = new CSkalarRefMetaInfo(typeof(Voucher), nameof(IsDownloaded));
        
        private CSkalarRef<Voucher, CEmailAdress> RecipientM;
        
        private static CSkalarRefMetaInfo _RecipientMetaInfoM = new CSkalarRefMetaInfo(typeof(Voucher), nameof(Recipient));
        
        public Voucher(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        public static CbOrm.Meta.CTyp _Voucher_Typ
        {
            get
            {
                return Voucher._Voucher_TypM;
            }
        }
        
        public override CbOrm.Meta.CTyp Typ
        {
            get
            {
                return Voucher._Voucher_Typ;
            }
        }
        
        public CSkalarRef<Voucher, Boolean> IsDownloaded
        {
            get
            {
                if (Object.ReferenceEquals(this.IsDownloadedM, null))
                {
                    this.IsDownloadedM = new CSkalarRef<Voucher, Boolean>(this, Voucher._IsDownloadedMetaInfo);
                }
                return this.IsDownloadedM;
            }
        }
        
        public static CSkalarRefMetaInfo _IsDownloadedMetaInfo
        {
            get
            {
                return Voucher._IsDownloadedMetaInfoM;
            }
        }
        
        public CSkalarRef<Voucher, CEmailAdress> Recipient
        {
            get
            {
                if (Object.ReferenceEquals(this.RecipientM, null))
                {
                    this.RecipientM = new CSkalarRef<Voucher, CEmailAdress>(this, Voucher._RecipientMetaInfo);
                }
                return this.RecipientM;
            }
        }
        
        public static CSkalarRefMetaInfo _RecipientMetaInfo
        {
            get
            {
                return Voucher._RecipientMetaInfoM;
            }
        }
        
        private static void _GetProperties(System.Action<CbOrm.Meta.CRefMetaInfo> aAddProperty)
        {
            aAddProperty.Invoke(Voucher._IsDownloadedMetaInfo);
            aAddProperty.Invoke(Voucher._RecipientMetaInfo);
        }
    }
    
    public class LocationInfo : CEntityObject
    {
        
        public static CbOrm.Meta.CTyp _LocationInfo_TypM = new CbOrm.Meta.CTyp(typeof(LocationInfo), new System.Guid("00000000-0000-0000-0000-000000000000"), LocationInfo._GetProperties);
        
        private CSkalarRef<LocationInfo, DateTime> MomentM;
        
        private static CSkalarRefMetaInfo _MomentMetaInfoM = new CSkalarRefMetaInfo(typeof(LocationInfo), nameof(Moment));
        
        private CSkalarRef<LocationInfo, String> IpAdressM;
        
        private static CSkalarRefMetaInfo _IpAdressMetaInfoM = new CSkalarRefMetaInfo(typeof(LocationInfo), nameof(IpAdress));
        
        private CSkalarRef<LocationInfo, String> TimezoneM;
        
        private static CSkalarRefMetaInfo _TimezoneMetaInfoM = new CSkalarRefMetaInfo(typeof(LocationInfo), nameof(Timezone));
        
        private CSkalarRef<LocationInfo, String> CountryM;
        
        private static CSkalarRefMetaInfo _CountryMetaInfoM = new CSkalarRefMetaInfo(typeof(LocationInfo), nameof(Country));
        
        private CSkalarRef<LocationInfo, String> RegionM;
        
        private static CSkalarRefMetaInfo _RegionMetaInfoM = new CSkalarRefMetaInfo(typeof(LocationInfo), nameof(Region));
        
        private CSkalarRef<LocationInfo, String> PostalM;
        
        private static CSkalarRefMetaInfo _PostalMetaInfoM = new CSkalarRefMetaInfo(typeof(LocationInfo), nameof(Postal));
        
        private CSkalarRef<LocationInfo, String> CityM;
        
        private static CSkalarRefMetaInfo _CityMetaInfoM = new CSkalarRefMetaInfo(typeof(LocationInfo), nameof(City));
        
        private CSkalarRef<LocationInfo, String> OrganisationM;
        
        private static CSkalarRefMetaInfo _OrganisationMetaInfoM = new CSkalarRefMetaInfo(typeof(LocationInfo), nameof(Organisation));
        
        public LocationInfo(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        public static CbOrm.Meta.CTyp _LocationInfo_Typ
        {
            get
            {
                return LocationInfo._LocationInfo_TypM;
            }
        }
        
        public override CbOrm.Meta.CTyp Typ
        {
            get
            {
                return LocationInfo._LocationInfo_Typ;
            }
        }
        
        public CSkalarRef<LocationInfo, DateTime> Moment
        {
            get
            {
                if (Object.ReferenceEquals(this.MomentM, null))
                {
                    this.MomentM = new CSkalarRef<LocationInfo, DateTime>(this, LocationInfo._MomentMetaInfo);
                }
                return this.MomentM;
            }
        }
        
        public static CSkalarRefMetaInfo _MomentMetaInfo
        {
            get
            {
                return LocationInfo._MomentMetaInfoM;
            }
        }
        
        public CSkalarRef<LocationInfo, String> IpAdress
        {
            get
            {
                if (Object.ReferenceEquals(this.IpAdressM, null))
                {
                    this.IpAdressM = new CSkalarRef<LocationInfo, String>(this, LocationInfo._IpAdressMetaInfo);
                }
                return this.IpAdressM;
            }
        }
        
        public static CSkalarRefMetaInfo _IpAdressMetaInfo
        {
            get
            {
                return LocationInfo._IpAdressMetaInfoM;
            }
        }
        
        public CSkalarRef<LocationInfo, String> Timezone
        {
            get
            {
                if (Object.ReferenceEquals(this.TimezoneM, null))
                {
                    this.TimezoneM = new CSkalarRef<LocationInfo, String>(this, LocationInfo._TimezoneMetaInfo);
                }
                return this.TimezoneM;
            }
        }
        
        public static CSkalarRefMetaInfo _TimezoneMetaInfo
        {
            get
            {
                return LocationInfo._TimezoneMetaInfoM;
            }
        }
        
        public CSkalarRef<LocationInfo, String> Country
        {
            get
            {
                if (Object.ReferenceEquals(this.CountryM, null))
                {
                    this.CountryM = new CSkalarRef<LocationInfo, String>(this, LocationInfo._CountryMetaInfo);
                }
                return this.CountryM;
            }
        }
        
        public static CSkalarRefMetaInfo _CountryMetaInfo
        {
            get
            {
                return LocationInfo._CountryMetaInfoM;
            }
        }
        
        public CSkalarRef<LocationInfo, String> Region
        {
            get
            {
                if (Object.ReferenceEquals(this.RegionM, null))
                {
                    this.RegionM = new CSkalarRef<LocationInfo, String>(this, LocationInfo._RegionMetaInfo);
                }
                return this.RegionM;
            }
        }
        
        public static CSkalarRefMetaInfo _RegionMetaInfo
        {
            get
            {
                return LocationInfo._RegionMetaInfoM;
            }
        }
        
        public CSkalarRef<LocationInfo, String> Postal
        {
            get
            {
                if (Object.ReferenceEquals(this.PostalM, null))
                {
                    this.PostalM = new CSkalarRef<LocationInfo, String>(this, LocationInfo._PostalMetaInfo);
                }
                return this.PostalM;
            }
        }
        
        public static CSkalarRefMetaInfo _PostalMetaInfo
        {
            get
            {
                return LocationInfo._PostalMetaInfoM;
            }
        }
        
        public CSkalarRef<LocationInfo, String> City
        {
            get
            {
                if (Object.ReferenceEquals(this.CityM, null))
                {
                    this.CityM = new CSkalarRef<LocationInfo, String>(this, LocationInfo._CityMetaInfo);
                }
                return this.CityM;
            }
        }
        
        public static CSkalarRefMetaInfo _CityMetaInfo
        {
            get
            {
                return LocationInfo._CityMetaInfoM;
            }
        }
        
        public CSkalarRef<LocationInfo, String> Organisation
        {
            get
            {
                if (Object.ReferenceEquals(this.OrganisationM, null))
                {
                    this.OrganisationM = new CSkalarRef<LocationInfo, String>(this, LocationInfo._OrganisationMetaInfo);
                }
                return this.OrganisationM;
            }
        }
        
        public static CSkalarRefMetaInfo _OrganisationMetaInfo
        {
            get
            {
                return LocationInfo._OrganisationMetaInfoM;
            }
        }
        
        private static void _GetProperties(System.Action<CbOrm.Meta.CRefMetaInfo> aAddProperty)
        {
            aAddProperty.Invoke(LocationInfo._MomentMetaInfo);
            aAddProperty.Invoke(LocationInfo._IpAdressMetaInfo);
            aAddProperty.Invoke(LocationInfo._TimezoneMetaInfo);
            aAddProperty.Invoke(LocationInfo._CountryMetaInfo);
            aAddProperty.Invoke(LocationInfo._RegionMetaInfo);
            aAddProperty.Invoke(LocationInfo._PostalMetaInfo);
            aAddProperty.Invoke(LocationInfo._CityMetaInfo);
            aAddProperty.Invoke(LocationInfo._OrganisationMetaInfo);
        }
    }
    
    public class Campaign : CEntityObject
    {
        
        public static CbOrm.Meta.CTyp _Campaign_TypM = new CbOrm.Meta.CTyp(typeof(Campaign), new System.Guid("00000000-0000-0000-0000-000000000000"), Campaign._GetProperties);
        
        private CSkalarRef<Campaign, String> NameM;
        
        private static CSkalarRefMetaInfo _NameMetaInfoM = new CSkalarRefMetaInfo(typeof(Campaign), nameof(Name));
        
        private CSkalarRef<Campaign, Int32> VoucherCountM;
        
        private static CSkalarRefMetaInfo _VoucherCountMetaInfoM = new CSkalarRefMetaInfo(typeof(Campaign), nameof(VoucherCount));
        
        private CR1NWRef<Campaign, Voucher> VouchersM;
        
        private static CR1NWRefMetaInfo _VouchersMetaInfoM = new CR1NWRefMetaInfo(typeof(Campaign), nameof(Vouchers));
        
        public Campaign(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        public static CbOrm.Meta.CTyp _Campaign_Typ
        {
            get
            {
                return Campaign._Campaign_TypM;
            }
        }
        
        public override CbOrm.Meta.CTyp Typ
        {
            get
            {
                return Campaign._Campaign_Typ;
            }
        }
        
        public CSkalarRef<Campaign, String> Name
        {
            get
            {
                if (Object.ReferenceEquals(this.NameM, null))
                {
                    this.NameM = new CSkalarRef<Campaign, String>(this, Campaign._NameMetaInfo);
                }
                return this.NameM;
            }
        }
        
        public static CSkalarRefMetaInfo _NameMetaInfo
        {
            get
            {
                return Campaign._NameMetaInfoM;
            }
        }
        
        public CSkalarRef<Campaign, Int32> VoucherCount
        {
            get
            {
                if (Object.ReferenceEquals(this.VoucherCountM, null))
                {
                    this.VoucherCountM = new CSkalarRef<Campaign, Int32>(this, Campaign._VoucherCountMetaInfo);
                }
                return this.VoucherCountM;
            }
        }
        
        public static CSkalarRefMetaInfo _VoucherCountMetaInfo
        {
            get
            {
                return Campaign._VoucherCountMetaInfoM;
            }
        }
        
        public CR1NWRef<Campaign, Voucher> Vouchers
        {
            get
            {
                if (Object.ReferenceEquals(this.VouchersM, null))
                {
                    this.VouchersM = new CR1NWRef<Campaign, Voucher>(this, Campaign._VouchersMetaInfo);
                }
                return this.VouchersM;
            }
        }
        
        public static CR1NWRefMetaInfo _VouchersMetaInfo
        {
            get
            {
                return Campaign._VouchersMetaInfoM;
            }
        }
        
        private static void _GetProperties(System.Action<CbOrm.Meta.CRefMetaInfo> aAddProperty)
        {
            aAddProperty.Invoke(Campaign._NameMetaInfo);
            aAddProperty.Invoke(Campaign._VoucherCountMetaInfo);
            aAddProperty.Invoke(Campaign._VouchersMetaInfo);
        }
    }
    
    public class Newsletter : CEntityObject
    {
        
        public static CbOrm.Meta.CTyp _Newsletter_TypM = new CbOrm.Meta.CTyp(typeof(Newsletter), new System.Guid("00000000-0000-0000-0000-000000000000"), Newsletter._GetProperties);
        
        private CSkalarRef<Newsletter, DateTime> MomentM;
        
        private static CSkalarRefMetaInfo _MomentMetaInfoM = new CSkalarRefMetaInfo(typeof(Newsletter), nameof(Moment));
        
        private CSkalarRef<Newsletter, String> HeadM;
        
        private static CSkalarRefMetaInfo _HeadMetaInfoM = new CSkalarRefMetaInfo(typeof(Newsletter), nameof(Head));
        
        private CSkalarRef<Newsletter, String> BodyM;
        
        private static CSkalarRefMetaInfo _BodyMetaInfoM = new CSkalarRefMetaInfo(typeof(Newsletter), nameof(Body));
        
        private CSkalarRef<Newsletter, Boolean> SentM;
        
        private static CSkalarRefMetaInfo _SentMetaInfoM = new CSkalarRefMetaInfo(typeof(Newsletter), nameof(Sent));
        
        public Newsletter(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        public static CbOrm.Meta.CTyp _Newsletter_Typ
        {
            get
            {
                return Newsletter._Newsletter_TypM;
            }
        }
        
        public override CbOrm.Meta.CTyp Typ
        {
            get
            {
                return Newsletter._Newsletter_Typ;
            }
        }
        
        public CSkalarRef<Newsletter, DateTime> Moment
        {
            get
            {
                if (Object.ReferenceEquals(this.MomentM, null))
                {
                    this.MomentM = new CSkalarRef<Newsletter, DateTime>(this, Newsletter._MomentMetaInfo);
                }
                return this.MomentM;
            }
        }
        
        public static CSkalarRefMetaInfo _MomentMetaInfo
        {
            get
            {
                return Newsletter._MomentMetaInfoM;
            }
        }
        
        public CSkalarRef<Newsletter, String> Head
        {
            get
            {
                if (Object.ReferenceEquals(this.HeadM, null))
                {
                    this.HeadM = new CSkalarRef<Newsletter, String>(this, Newsletter._HeadMetaInfo);
                }
                return this.HeadM;
            }
        }
        
        public static CSkalarRefMetaInfo _HeadMetaInfo
        {
            get
            {
                return Newsletter._HeadMetaInfoM;
            }
        }
        
        public CSkalarRef<Newsletter, String> Body
        {
            get
            {
                if (Object.ReferenceEquals(this.BodyM, null))
                {
                    this.BodyM = new CSkalarRef<Newsletter, String>(this, Newsletter._BodyMetaInfo);
                }
                return this.BodyM;
            }
        }
        
        public static CSkalarRefMetaInfo _BodyMetaInfo
        {
            get
            {
                return Newsletter._BodyMetaInfoM;
            }
        }
        
        public CSkalarRef<Newsletter, Boolean> Sent
        {
            get
            {
                if (Object.ReferenceEquals(this.SentM, null))
                {
                    this.SentM = new CSkalarRef<Newsletter, Boolean>(this, Newsletter._SentMetaInfo);
                }
                return this.SentM;
            }
        }
        
        public static CSkalarRefMetaInfo _SentMetaInfo
        {
            get
            {
                return Newsletter._SentMetaInfoM;
            }
        }
        
        private static void _GetProperties(System.Action<CbOrm.Meta.CRefMetaInfo> aAddProperty)
        {
            aAddProperty.Invoke(Newsletter._MomentMetaInfo);
            aAddProperty.Invoke(Newsletter._HeadMetaInfo);
            aAddProperty.Invoke(Newsletter._BodyMetaInfo);
            aAddProperty.Invoke(Newsletter._SentMetaInfo);
        }
    }
    
    public class SubscribeRequest : CEntityObject
    {
        
        public static CbOrm.Meta.CTyp _SubscribeRequest_TypM = new CbOrm.Meta.CTyp(typeof(SubscribeRequest), new System.Guid("00000000-0000-0000-0000-000000000000"), SubscribeRequest._GetProperties);
        
        private CSkalarRef<SubscribeRequest, Boolean> SubscribeM;
        
        private static CSkalarRefMetaInfo _SubscribeMetaInfoM = new CSkalarRefMetaInfo(typeof(SubscribeRequest), nameof(Subscribe));
        
        public SubscribeRequest(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        public static CbOrm.Meta.CTyp _SubscribeRequest_Typ
        {
            get
            {
                return SubscribeRequest._SubscribeRequest_TypM;
            }
        }
        
        public override CbOrm.Meta.CTyp Typ
        {
            get
            {
                return SubscribeRequest._SubscribeRequest_Typ;
            }
        }
        
        public CSkalarRef<SubscribeRequest, Boolean> Subscribe
        {
            get
            {
                if (Object.ReferenceEquals(this.SubscribeM, null))
                {
                    this.SubscribeM = new CSkalarRef<SubscribeRequest, Boolean>(this, SubscribeRequest._SubscribeMetaInfo);
                }
                return this.SubscribeM;
            }
        }
        
        public static CSkalarRefMetaInfo _SubscribeMetaInfo
        {
            get
            {
                return SubscribeRequest._SubscribeMetaInfoM;
            }
        }
        
        private static void _GetProperties(System.Action<CbOrm.Meta.CRefMetaInfo> aAddProperty)
        {
            aAddProperty.Invoke(SubscribeRequest._SubscribeMetaInfo);
        }
    }
    
    public class UnsubscribeRequest : CEntityObject
    {
        
        public static CbOrm.Meta.CTyp _UnsubscribeRequest_TypM = new CbOrm.Meta.CTyp(typeof(UnsubscribeRequest), new System.Guid("00000000-0000-0000-0000-000000000000"), UnsubscribeRequest._GetProperties);
        
        private CSkalarRef<UnsubscribeRequest, Boolean> UnsubscribeM;
        
        private static CSkalarRefMetaInfo _UnsubscribeMetaInfoM = new CSkalarRefMetaInfo(typeof(UnsubscribeRequest), nameof(Unsubscribe));
        
        private CSkalarRef<UnsubscribeRequest, String> ReasonM;
        
        private static CSkalarRefMetaInfo _ReasonMetaInfoM = new CSkalarRefMetaInfo(typeof(UnsubscribeRequest), nameof(Reason));
        
        public UnsubscribeRequest(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        public static CbOrm.Meta.CTyp _UnsubscribeRequest_Typ
        {
            get
            {
                return UnsubscribeRequest._UnsubscribeRequest_TypM;
            }
        }
        
        public override CbOrm.Meta.CTyp Typ
        {
            get
            {
                return UnsubscribeRequest._UnsubscribeRequest_Typ;
            }
        }
        
        public CSkalarRef<UnsubscribeRequest, Boolean> Unsubscribe
        {
            get
            {
                if (Object.ReferenceEquals(this.UnsubscribeM, null))
                {
                    this.UnsubscribeM = new CSkalarRef<UnsubscribeRequest, Boolean>(this, UnsubscribeRequest._UnsubscribeMetaInfo);
                }
                return this.UnsubscribeM;
            }
        }
        
        public static CSkalarRefMetaInfo _UnsubscribeMetaInfo
        {
            get
            {
                return UnsubscribeRequest._UnsubscribeMetaInfoM;
            }
        }
        
        public CSkalarRef<UnsubscribeRequest, String> Reason
        {
            get
            {
                if (Object.ReferenceEquals(this.ReasonM, null))
                {
                    this.ReasonM = new CSkalarRef<UnsubscribeRequest, String>(this, UnsubscribeRequest._ReasonMetaInfo);
                }
                return this.ReasonM;
            }
        }
        
        public static CSkalarRefMetaInfo _ReasonMetaInfo
        {
            get
            {
                return UnsubscribeRequest._ReasonMetaInfoM;
            }
        }
        
        private static void _GetProperties(System.Action<CbOrm.Meta.CRefMetaInfo> aAddProperty)
        {
            aAddProperty.Invoke(UnsubscribeRequest._UnsubscribeMetaInfo);
            aAddProperty.Invoke(UnsubscribeRequest._ReasonMetaInfo);
        }
    }
    
    public class Content : CEntityObject
    {
        
        public static CbOrm.Meta.CTyp _Content_TypM = new CbOrm.Meta.CTyp(typeof(Content), new System.Guid("00000000-0000-0000-0000-000000000000"), Content._GetProperties);
        
        private CSkalarRef<Content, String> FileNameM;
        
        private static CSkalarRefMetaInfo _FileNameMetaInfoM = new CSkalarRefMetaInfo(typeof(Content), nameof(FileName));
        
        private CSkalarRef<Content, String> RedirectTargetM;
        
        private static CSkalarRefMetaInfo _RedirectTargetMetaInfoM = new CSkalarRefMetaInfo(typeof(Content), nameof(RedirectTarget));
        
        public Content(CStorage aStorage) : 
                base(aStorage)
        {
        }
        
        public static CbOrm.Meta.CTyp _Content_Typ
        {
            get
            {
                return Content._Content_TypM;
            }
        }
        
        public override CbOrm.Meta.CTyp Typ
        {
            get
            {
                return Content._Content_Typ;
            }
        }
        
        public CSkalarRef<Content, String> FileName
        {
            get
            {
                if (Object.ReferenceEquals(this.FileNameM, null))
                {
                    this.FileNameM = new CSkalarRef<Content, String>(this, Content._FileNameMetaInfo);
                }
                return this.FileNameM;
            }
        }
        
        public static CSkalarRefMetaInfo _FileNameMetaInfo
        {
            get
            {
                return Content._FileNameMetaInfoM;
            }
        }
        
        public CSkalarRef<Content, String> RedirectTarget
        {
            get
            {
                if (Object.ReferenceEquals(this.RedirectTargetM, null))
                {
                    this.RedirectTargetM = new CSkalarRef<Content, String>(this, Content._RedirectTargetMetaInfo);
                }
                return this.RedirectTargetM;
            }
        }
        
        public static CSkalarRefMetaInfo _RedirectTargetMetaInfo
        {
            get
            {
                return Content._RedirectTargetMetaInfoM;
            }
        }
        
        private static void _GetProperties(System.Action<CbOrm.Meta.CRefMetaInfo> aAddProperty)
        {
            aAddProperty.Invoke(Content._FileNameMetaInfo);
            aAddProperty.Invoke(Content._RedirectTargetMetaInfo);
        }
    }
    
    public class CbVoucherSchema : CbOrm.Schema.CSchema
    {
        
        public static CbVoucherSchema SingletonM = new CbVoucherSchema();
        
        private CbVoucherSchema()
        {
            this.AddTyp(Account._Account_TypM);
            this.AddTyp(Publisher._Publisher_TypM);
            this.AddTyp(EmailAccount._EmailAccount_TypM);
            this.AddTyp(Gift._Gift_TypM);
            this.AddTyp(GiftStatistic._GiftStatistic_TypM);
            this.AddTyp(DownloadFormat._DownloadFormat_TypM);
            this.AddTyp(GiftCounters._GiftCounters_TypM);
            this.AddTyp(VoucherRequest._VoucherRequest_TypM);
            this.AddTyp(Voucher._Voucher_TypM);
            this.AddTyp(LocationInfo._LocationInfo_TypM);
            this.AddTyp(Campaign._Campaign_TypM);
            this.AddTyp(Newsletter._Newsletter_TypM);
            this.AddTyp(SubscribeRequest._SubscribeRequest_TypM);
            this.AddTyp(UnsubscribeRequest._UnsubscribeRequest_TypM);
            this.AddTyp(Content._Content_TypM);
            this.Init();
        }
        
        public static CbVoucherSchema Singleton
        {
            get
            {
                return CbVoucherSchema.SingletonM;
            }
        }
        
        public static CbOrm.Schema.CSchema GetSingleton()
        {
            return CbVoucherSchema.SingletonM;
        }
    }
}
